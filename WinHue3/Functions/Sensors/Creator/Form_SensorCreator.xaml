<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:resx="clr-namespace:WinHue3.Resources"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:creator="clr-namespace:WinHue3.Functions.Sensors.Creator"
    x:Name="FormSensorCreator1" x:Class="WinHue3.Functions.Sensors.Creator.Form_SensorCreator"
    
        Title="{x:Static resx:GUI.SensorCreatorForm_Title}" Height="300" Width="650" WindowStartupLocation="CenterOwner" Icon="/WinHue3;component/Resources/sensor.png" BorderBrush="{Binding RelativeSource={RelativeSource Self}, Path=WindowTitleBrush}" MinWidth="650" MinHeight="300">
    <Window.DataContext>
        <creator:SensorCreatorViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type xctk:WatermarkTextBox}" BasedOn="{StaticResource WatermarkTextBoxStyle}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel DockPanel.Dock="Right">
                            <AdornedElementPlaceholder>
                                <Border BorderBrush="Red" BorderThickness="2" />
                            </AdornedElementPlaceholder>
                            <TextBlock Margin="3" Foreground="Red"><Run Text="!"/></TextBlock>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BtnSave" BasedOn="{StaticResource ButtonStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TbSensorName}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TbModelId}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TbSwVersion}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TbMfgName}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TbUniqueId}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BtnTestUrl" >
            <Style.Triggers>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=tbSensorUrl}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource theme_MainBackground}"/>
    </Window.Background>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>

            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <GroupBox Header="{x:Static resx:GUI.SensorCreatorForm_SensorBody}" Style="{DynamicResource GroupBoxStyle}" TextOptions.TextFormattingMode="Display">
            <GroupBox.Foreground>
                <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
            </GroupBox.Foreground>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_Name}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_SensorType}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" Grid.Row="1">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <ComboBox x:Name="CbSensorType" VerticalAlignment="Top" SelectedValue="{Binding SensorModel.Type}" SelectedValuePath="Tag" TabIndex="1" IsEnabled="{Binding NotEditing}" TextOptions.TextFormattingMode="Display" Grid.Row="1" Grid.Column="1" Margin="0,2,0,0" Style="{DynamicResource ComboBoxStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ChangeSensorTypeCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Content="CLIPGenericFlag" Tag="CLIPGenericFlag"/>
                    <ComboBoxItem Content="CLIPGenericStatus" Tag="CLIPGenericStatus"/>
                    <ComboBoxItem Content="CLIPHumidity" Tag="CLIPHumidity"/>
                    <ComboBoxItem Content="CLIPOpenClose" Tag="CLIPOpenClose"/>
                    <ComboBoxItem Content="CLIPPresence" Tag="CLIPPresence"/>
                    <ComboBoxItem Content="CLIPTemperature" Tag="CLIPTemperature"/>
                    <ComboBoxItem Content="CLIPSwitch" Tag="CLIPSwitch"/>
                </ComboBox>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_ModelId}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" Grid.Row="2">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_SwVersion}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" Grid.Row="3">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_MfgName}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" Grid.Row="4">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <Label Content="{x:Static resx:GUI.SensorCreatorForm_UniqueId}" HorizontalAlignment="Left" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" Grid.Row="5">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
                    </Label.Foreground>
                </Label>
                <xctk:WatermarkTextBox x:Name="TbUniqueId" TextWrapping="Wrap" Text="{Binding SensorModel.Uniqueid, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="00:00:00:00:00:00" MaxLength="32" IsEnabled="{Binding NotEditing}" TabIndex="5" TextOptions.TextFormattingMode="Display" Grid.Row="5" Grid.Column="1" Margin="0,1,0,0" />
                <xctk:WatermarkTextBox x:Name="TbMfgName" TextWrapping="Wrap" Text="{Binding SensorModel.Mfgname, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="my manufacturer name" MinWidth="6" MaxLength="32" IsEnabled="{Binding NotEditing}" TabIndex="4" TextOptions.TextFormattingMode="Display" Grid.Row="4" Grid.Column="1" Margin="0,1,0,0" />
                <xctk:WatermarkTextBox x:Name="TbSwVersion" TextWrapping="Wrap" Text="{Binding SensorModel.Swversion, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="1.0" MaxLength="16" IsEnabled="{Binding NotEditing}" TabIndex="3" TextOptions.TextFormattingMode="Display" Grid.Row="3" Grid.Column="1" Margin="0,1,0,0"/>
                <xctk:WatermarkTextBox x:Name="TbModelId" TextWrapping="Wrap" Text="{Binding SensorModel.ModelId, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="IPSENSOR" MaxLength="32" IsEnabled="{Binding NotEditing}" TabIndex="2" TextOptions.TextFormattingMode="Display" Grid.Row="2" Grid.Column="1" Margin="0,1,0,0"/>
                <xctk:WatermarkTextBox x:Name="TbSensorName" TextWrapping="Wrap" Text="{Binding SensorModel.Name, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="my new sensor" MaxLength="32" TabIndex="0" TextOptions.TextFormattingMode="Display" Grid.Column="1" Margin="0,1,0,0"/>

            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="1" Header="{x:Static resx:GUI.SensorCreatorForm_SensorConfig}" Margin="10,0,0,0" Style="{DynamicResource GroupBoxStyle}" Padding="5" TextOptions.TextFormattingMode="Display">
            <GroupBox.Foreground>
                <SolidColorBrush Color="{DynamicResource theme_MainText}"/>
            </GroupBox.Foreground>
            <Grid>
                <xctk:PropertyGrid ShowSearchBox="False" ShowSortOptions="False" ShowSummary="False" ShowTitle="False" SelectedObject="{Binding SensorModel.Config}" Foreground="Black"/>

            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
            <Button x:Name="BtnCreate" Content="{Binding CreateBtnText}" Style="{StaticResource BtnSave}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnCreate_Click" TabIndex="9"/>
            <Button x:Name="BtnCancel" Content="{x:Static resx:GUI.SensorCreatorForm_CancelButton}" HorizontalAlignment="Left" VerticalAlignment="Top" IsCancel="True" TabIndex="10" Click="btnCancel_Click" Style="{DynamicResource ButtonStyle}" Margin="10,0,0,0"/>
        </StackPanel>

    </Grid>
</Window>
