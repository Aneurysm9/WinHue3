<Window
    x:Class="WinHue3.Functions.BridgePairing.Form_BridgeDetectionPairing"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:resx="clr-namespace:WinHue3.Resources"
        xmlns:bridgePairing="clr-namespace:WinHue3.Functions.BridgePairing"
        Title="Bridge Detection and Pairing..." Height="364.861" Width="635.634" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" Icon="/WinHue3;component/Resources/bridge.png">
    <Window.DataContext>
        <bridgePairing:BridgePairingViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>

                    <ControlTemplate>
                        <DockPanel DockPanel.Dock="Right">
                            <!--<TextBlock Margin="3" Foreground="Red">!</TextBlock>-->
                            <AdornedElementPlaceholder>
                                <Border BorderBrush="Red" BorderThickness="2" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BtnSave" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=BtnDefault, Path=(Validation.HasError)}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=BtnPair, Path=(Validation.HasError)}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource theme_MainBackground}"/>
    </Window.Background>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListView x:Name="ListView" ItemsSource="{Binding ListBridges}" SelectedItem="{Binding SelectedBridge}" IsEnabled="{Binding CanChangeSelection}" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,5" Style="{DynamicResource ListViewStyle}">
            <ListView.Background>
                <SolidColorBrush Color="{DynamicResource theme_SecondaryBackground}"/>
            </ListView.Background>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                    <GridViewColumn Width="50" Header="{x:Static resx:GUI.BridgeDetectionPairing_ListView_Image}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="/WinHue3;component/Resources/bridge.png" Height="24" Width="24" SnapsToDevicePixels="True"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="35" Header="">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsDefault}"  Focusable="False" IsHitTestVisible="False"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="150" Header="{x:Static resx:GUI.BridgeDetectionPairing_ListView_IPAddress}" DisplayMemberBinding="{Binding IpAddress}"/>

                    <GridViewColumn Width="350" Header="{x:Static resx:GUI.BridgeDetectionPairing_ListView_ApiKey}">
                        <!--DisplayMemberBinding="{Binding ApiKey}"-->
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding ApiKey, Mode=OneWay}" TextWrapping="Wrap" IsReadOnly="True" BorderThickness="0" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Button x:Name="BtnDone" Content="{x:Static resx:GUI.BridgeDetectionPairing_Done}" Style="{DynamicResource ButtonStyle}" HorizontalAlignment="Right" Width="73" Click="btnDone_Click" Grid.Row="5" Margin="0,0,10,0" TextOptions.TextFormattingMode="Display"/>
        <ProgressBar x:Name="PbWaitBar" VerticalAlignment="Top" Maximum="{Binding BridgePairModel.ProgressBarMax}" Minimum="{Binding BridgePairModel.ProgressBarMin}" Value="{Binding BridgePairModel.ProgressBarValue}" Grid.Row="3" Grid.ColumnSpan="2" Height="6" Margin="0,5" Style="{DynamicResource ProgressBarStyle}"/>
        <TextBlock x:Name="TblMessage" TextWrapping="Wrap" Text="{Binding BridgePairModel.UserMessage}" Grid.ColumnSpan="2" Grid.Row="4" Margin="0,0,0,10" TextOptions.TextFormattingMode="Display">
            <TextBlock.Foreground>
                <SolidColorBrush Color="{DynamicResource theme_ControlText}"/>
            </TextBlock.Foreground>
        </TextBlock>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Left" Orientation="Horizontal">
            <Button x:Name="BtnPair" Content="{x:Static resx:GUI.BridgeDetectionPairing_Pair}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="73" Command="{Binding PairBridgeCommand}" ToolTip="{x:Static resx:GUI.BridgeDetectionPairing_Pair_Tooltip}" Tag="{Binding AnyPaired, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display"/>
            <Button x:Name="BtnDefault" Content="{x:Static resx:GUI.BridgeDetectionPairing_Default}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="73" ToolTip="{x:Static resx:GUI.BridgeDetectionPairing_Default_Tooltip}" Command="{Binding SetDefaultBridgeCommand}" Tag="{Binding DefaultSet, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" Margin="5,0,0,0" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display"/>
        </StackPanel>
        <StackPanel HorizontalAlignment="Right" Grid.RowSpan="2" VerticalAlignment="Top" Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2">
            <Button x:Name="BtnManualIp" Content="{x:Static resx:GUI.BridgeDetectionPairing_ManualIP}" Command="{Binding AddManualIpCommand}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="73" Margin="0,0,5,0" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display" />
            <Button x:Name="BtnIpScan" Content="{Binding ScanButtonText}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="73" Command="{Binding ScanForBridgeCommand}" ToolTip="{x:Static resx:GUI.BridgeDetectionPairing_Scan_Tooltip}" Margin="0,0,5,0" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display"/>
            <Button x:Name="BtnDetectBridges" Content="{x:Static resx:GUI.BridgeDetectionPairing_DetectBridge}" VerticalAlignment="Top" Command="{Binding DetectBridgeCommand}" ToolTip="{x:Static resx:GUI.BridgeDetectionPairing_DetectBridge_Tooltip}" HorizontalAlignment="Left" Width="175" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display"/>
        </StackPanel>
        <Label Content="{x:Static resx:GUI.BridgeDetectionPairing_ListBridge}" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" Padding="0,0,5,5" FontWeight="Bold" TextOptions.TextFormattingMode="Display">
            <Label.Foreground>
                <SolidColorBrush Color="{DynamicResource theme_ControlText}"/>
            </Label.Foreground>
        </Label>
        <Button x:Name="BtnCancel" HorizontalAlignment="Left" Width="73" Click="btnCancel_Click" Grid.Row="5" Grid.Column="1" Content="Cancel" Style="{DynamicResource ButtonStyle}" TextOptions.TextFormattingMode="Display"/>

    </Grid>
</Window>
