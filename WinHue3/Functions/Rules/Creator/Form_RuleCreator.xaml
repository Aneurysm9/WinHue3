<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:resx="clr-namespace:WinHue3.Resources"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:controls="clr-namespace:WinHue3.Controls"
    xmlns:utils="clr-namespace:WinHue3.Utils"
    xmlns:creator="clr-namespace:WinHue3.Functions.Rules.Creator"
    x:Class="WinHue3.Functions.Rules.Creator.Form_RuleCreator"
        mc:Ignorable="d"
        Title="Rule Creator" Height="382.456" Width="641.281" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="/WinHue3;component/Resources/rules.png">
    <Window.DataContext>
        <creator:RuleCreatorViewModel/>
    </Window.DataContext>
    <Grid>
        <xctk:WatermarkTextBox HorizontalAlignment="Left" Height="23" Margin="5,4,0,0" TextWrapping="Wrap" Text="{Binding Name}" VerticalAlignment="Top" Width="522" Watermark="{x:Static resx:GUI.RuleCreatorForm_Name}"/>
        <TabControl HorizontalAlignment="Left" Height="279" Margin="5,32,0,0" VerticalAlignment="Top" Width="607">
            <TabItem Header="{x:Static resx:GUI.RuleCreatorForm_Conditions}">
                <Grid Background="#FFE5E5E5">
                    <ListView HorizontalAlignment="Left" Height="237" Margin="302,4,0,0" VerticalAlignment="Top" Width="289" ItemsSource="{Binding RuleConditionViewModel.ListRuleConditions}" SelectedItem="{Binding RuleConditionViewModel.SelectedRuleCondition }" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.InputBindings>
                            <KeyBinding Key="Escape" Command="{Binding RuleConditionViewModel.ClearSelectedRuleConditionCommand}"/>
                        </ListView.InputBindings>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RuleConditionViewModel.SelectRuleConditionCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="2" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="222"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding address}" Grid.Column="0" Grid.Row="0" TextWrapping="Wrap" Padding="5,0,0,0"/>
                                    <TextBlock Text="{Binding operator}" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0"/>
                                    <TextBlock Text="{Binding value}" Grid.Column="0" Grid.Row="2" TextWrapping="Wrap" Padding="5,0,0,0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding operator}" Value="dx">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Button Content="X" Background="Transparent" BorderBrush="Transparent" Width="20" Height="20" Grid.Column="1" Grid.Row="0" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.RuleConditionViewModel.RemoveRuleConditionCommand}"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button Content="{x:Static resx:GUI.RuleCreatorForm_Add}" HorizontalAlignment="Left" Margin="222,217,0,0" VerticalAlignment="Top" Width="75" Height="24" Command="{Binding RuleConditionViewModel.AddConditionCommand}"/>
                    <TreeView x:Name="tvProperties" HorizontalAlignment="Left" Height="127" Margin="5,59,0,0" VerticalAlignment="Top" Width="292" ItemsSource="{Binding RuleConditionViewModel.ListConditionProperties}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding RuleConditionViewModel.ChangeSelectedConditionPropertyCommand}" CommandParameter="{Binding ElementName=tvProperties, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsSelected" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <!--<TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type TreeViewItem}" ItemsSource="{Binding Items}">
                                <TextBlock Text="{Binding PropName}"/>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>-->
                    </TreeView>
                    <xctk:WatermarkComboBox HorizontalAlignment="Left" Margin="5,4,0,0" VerticalAlignment="Top" Width="292" Watermark="{x:Static resx:GUI.RuleCreatorForm_ObjectType_Watermark}" SelectedValuePath="Tag" SelectedValue="{Binding RuleConditionViewModel.ObjectType}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RuleConditionViewModel.PopulateConditionObjectsCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Lights}" Tag="lights"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Groups}" Tag="groups"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Scenes}" Tag="scenes"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_ResourceLinks}" Tag="resourcelinks"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Rules}" Tag="rules"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Schedules}" Tag="schedules"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Sensors}" Tag="sensors"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Config}" Tag="config"/>
                    </xctk:WatermarkComboBox>
                    <xctk:WatermarkComboBox HorizontalAlignment="Left" Margin="5,31,0,0" VerticalAlignment="Top" Width="292" ItemsSource="{Binding RuleConditionViewModel.ListConditionHueObjects}" DisplayMemberPath="name" SelectedItem="{Binding RuleConditionViewModel.SelectedConditionHueObject}" Watermark="{x:Static resx:GUI.RuleCreatorForm_Object_Watermark}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RuleConditionViewModel.PopulateConditionPropertiesCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <xctk:WatermarkComboBox.Style>
                            <Style TargetType="xctk:WatermarkComboBox">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RuleConditionViewModel.ObjectType}" Value="config">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </xctk:WatermarkComboBox.Style>
                    </xctk:WatermarkComboBox>
                    <xctk:WatermarkComboBox HorizontalAlignment="Left" Margin="5,191,0,0" VerticalAlignment="Top" Width="292"  SelectedValuePath="Tag" SelectedValue="{Binding RuleConditionViewModel.ConditionOperator}" Watermark="(Choose the operator)">
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Equals}" Tag="eq"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Changed}" Tag="dx"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Delayed_Changed}" Tag="ddx"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_In}" Tag="in"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Not_In}" Tag="not in"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Stable}" Tag="stable"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Not_Stable}" Tag="not stable"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Lower_Than}" Tag="lt"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Greater_Than}" Tag="gt"/>
                    </xctk:WatermarkComboBox>
                    <xctk:WatermarkTextBox HorizontalAlignment="Left" Height="23" Margin="5,218,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="212" Text="{Binding RuleConditionViewModel.ConditionValue, NotifyOnSourceUpdated=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}"  IsEnabled="{Binding CanEnterConditionValue}" Watermark="{x:Static resx:GUI.RuleCreatorForm_Value_Watermark}">
                        <xctk:WatermarkTextBox.Style>
                            <Style TargetType="{x:Type xctk:WatermarkTextBox}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RuleConditionViewModel.ConditionOperator}" Value="dx">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </xctk:WatermarkTextBox.Style>
                    </xctk:WatermarkTextBox>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static resx:GUI.RuleCreatorForm_Actions}">
                <Grid Background="#FFE5E5E5">
                    <ListView HorizontalAlignment="Left" Height="231" Margin="299,7,0,0" VerticalAlignment="Top" Width="292" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding RuleActionViewModel.ListRuleActions}" SelectedItem="{Binding RuleActionViewModel.SelectedRuleAction}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RuleActionViewModel.SelectRuleActionCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="222"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding address}" Grid.Column="0" Grid.Row="0"/>
                                    <TextBlock Text="{Binding method}" Grid.Column="0" Grid.Row="1"/>
                                    <TextBlock Text="{Binding body}" Grid.Column="0" Grid.Row="2"/>
                                    <Button Content="X" Background="Transparent" BorderBrush="Transparent" Width="20" Height="20" Grid.Column="1" Grid.Row="0" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.RuleActionViewModel.RemoveRuleActionCommand}"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <xctk:PropertyGrid HorizontalAlignment="Left" Margin="10,63,0,0" VerticalAlignment="Top" Width="284" Height="150" ShowSearchBox="False" ShowSortOptions="False" ShowSummary="False" ShowTitle="False" SelectedObject="{Binding RuleActionViewModel.ActionProperties }"/>

                    <Button Content="{x:Static resx:GUI.RuleCreatorForm_Add}" HorizontalAlignment="Left" Margin="219,218,0,0" VerticalAlignment="Top" Width="75" Command="{Binding RuleActionViewModel.AddActionCommand}"/>
                    <xctk:WatermarkComboBox HorizontalAlignment="Left" Margin="10,7,0,0" VerticalAlignment="Top" Width="284" SelectedValuePath="Tag" SelectedValue="{Binding RuleActionViewModel.ObjectType}" Watermark="{x:Static resx:GUI.RuleCreatorForm_ObjectType_Watermark}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RuleActionViewModel.PopulateActionObjectsCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem Content="Lights" Tag="lights"/>
                        <ComboBoxItem Content="Groups" Tag="groups"/>
                        <ComboBoxItem Content="Scenes" Tag="scenes"/>
                        <ComboBoxItem Content="Schedules" Tag="schedules"/>
                        <!--<ComboBoxItem Content="Resource Links" Tag="resourcelinks"/>-->
                        <ComboBoxItem Content="Sensors" Tag="sensors"/>
                    </xctk:WatermarkComboBox>
                    <xctk:WatermarkComboBox HorizontalAlignment="Left" Margin="10,35,0,0" VerticalAlignment="Top" Width="284" ItemsSource="{Binding RuleActionViewModel.ListActionHueObjects}" SelectedItem="{Binding RuleActionViewModel.SelectedHueObject}" DisplayMemberPath="name" Watermark="{x:Static resx:GUI.RuleCreatorForm_Object_Watermark}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                               <i:InvokeCommandAction Command="{Binding RuleActionViewModel.PopulatePropertyGridCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xctk:WatermarkComboBox>
                </Grid>
            </TabItem>
        </TabControl>
        <Button Name="btnSave" Content="{x:Static resx:GUI.RuleCreatorForm_Save}" HorizontalAlignment="Left" Margin="426,317,0,0" VerticalAlignment="Top" Width="90" Height="22" Click="btnSave_Click" />
        <Button Name="btnCancel" Content="{x:Static resx:GUI.RuleCreatorForm_CancelButton}" HorizontalAlignment="Left" Margin="522,317,0,0" VerticalAlignment="Top" Width="90" Height="22" Click="btnCancel_Click"/>
        <CheckBox Content="{x:Static resx:GUI.RuleCreatorForm_Enabled}" HorizontalAlignment="Left" Margin="532,4,0,0" Height="23" Width="80" IsChecked="{Binding Enabled}" VerticalAlignment="Top"/>
    </Grid>
</Window>

    